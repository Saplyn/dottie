name: Build and Publish Package

on:
  push:
    branches: [release]
  pull_request:
    branches: [release]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Build project
        run: cargo build --release --target ${{ matrix.target }}

      - name: Upload built artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dottie-${{ matrix.name }}
          path: target/${{ matrix.target }}/release/${{ matrix.binary }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: linux-x86_64
            os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            binary: dottie
          #
          # - name: macos-aarch64
          #   os: macos-latest
          #   target: aarch64-apple-darwin # for Arm based macs (M1 and above).
          #   binary: dottie
          #
          # - name: macos-x86_64
          #   os: macos-latest
          #   target: x86_64-apple-darwin # for Intel based macs.
          #   binary: dottie
          #
          # - name: windows-x86_64
          #   os: windows-latest
          #   target: x86_64-pc-windows-msvc
          #   binary: dottie.exe

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download built artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: List all artifacts
        working-directory: artifacts
        run: ls -AlF

      - name: Make Release
        uses: softprops/action-gh-release@v2
        with:
          draft: true
          token: ${{ secrets.TOKEN_SAPLYN_DOTTIE_ACTION }}
